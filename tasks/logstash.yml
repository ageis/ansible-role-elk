---
- name: Install Logstash.
  apt:
    name: logstash
    state: latest
  notify:
    - reload systemd
    - restart logstash

- name: Gather list of existing Logstash plugins.
  command: /usr/share/logstash/bin/logstash-plugin list
  changed_when: false
  always_run: true
  register: logstash_plugin_check_result

- name: Install Logstash plugins.
  command: /usr/share/logstash/bin/logstash-plugin install {{ item }}
  when: item not in logstash_plugin_check_result.stdout
  with_items: "{{ elk_logstash_plugins }}"

- name: Create Logstash config directories.
  file:
    path: "/etc/logstash/{{ item }}"
    owner: root
    group: root
    mode: "0755"
    state: directory
  with_items:
    - conf.d
    - patterns.d
    - dat_files

- name: Copy Logstash patterns.
  template:
    src: "{{ item }}"
    dest: "/etc/logstash/patterns.d/{{ item | basename }}"
    owner: root
    group: root
    mode: "0644"
  with_fileglob: "{{ elk_logstash_patterns }}"
  notify: restart logstash
  tags: patterns

- name: Copy any optional GeoIP database
  copy:
    src: "{{ item }}"
    dest: "/etc/logstash/dat_files/{{ item | basename }}"
    owner: root
    group: root
    mode: "0644"
  with_fileglob: "{{ elk_logstash_geoipdbs }}"
  notify: restart logstash
  tags: geoip_copy

- name: Copy (and verify) Logstash filters.
  template:
    src: "{{ item }}"
    # Force .conf suffix. Assumes there's a dot somewhere in the filename.
    dest: "/etc/logstash/conf.d/{{ (item | basename).split('.') | first + '.conf' }}"
    owner: root
    group: root
    mode: "0644"
    validate: "/usr/share/logstash/bin/logstash -t -f %s"
  with_fileglob: "{{ elk_logstash_filters }}"
  notify: restart logstash
  tags: filters

- name: Start logstash service.
  service:
    name: logstash
    state: running
    enabled: yes
